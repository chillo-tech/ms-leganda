on:
  push:
    branches:
      #- develop
      - miseEnLigne
  workflow_dispatch:

env:
  NODE_VERSION: '14.x'

permissions:
  contents: read

jobs:

  create-folder:
    name: Create folder
    runs-on: ubuntu-latest
    steps:
    - name: Create folder
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.RECETTE_APPLICATIONS_HOST }}
        port: ${{ secrets.RECETTE_APPLICATIONS_PORT }}
        username: ${{ secrets.RECETTE_APPLICATIONS_USERNAME }}
        password: ${{ secrets.RECETTE_APPLICATIONS_PASSWPRD }}
        key: ${{ secrets.RECETTE_APPLICATIONS_SSH_PRIVATE_KEY }}
        script: |
          sudo mkdir -p /opt/applications/leganda/ms-leganda
          sudo chmod ugo+rwx /opt/applications/leganda/ms-leganda


  copy-configs:
    name: "copy configs"
    runs-on: ubuntu-latest
    needs: create-folder
    steps:
      - uses: actions/checkout@master
      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.RECETTE_APPLICATIONS_HOST }}
          port: ${{ secrets.RECETTE_APPLICATIONS_PORT }}
          username: ${{ secrets.RECETTE_APPLICATIONS_USERNAME }}
          password: ${{ secrets.RECETTE_APPLICATIONS_PASSWPRD }}
          key: ${{ secrets.RECETTE_APPLICATIONS_SSH_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "/opt/applications/leganda/ms-leganda"

  dockerize:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      #- name: Set up QEMU
       # uses: docker/setup-qemu-action@v2
      #- name: Set up Docker Buildx
       # uses: docker/setup-buildx-action@v2
      #- name: Login to DockerHub
       # uses: docker/login-action@v2
        #with:
          #username: ${{ secrets.DOCKERHUB_USERNAME }}
          #password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'


      - name: check
        run: |
          ls -al


      #ce que j'ai ajouter
      - name: Nexus release
        uses: Propromp/nexus-release@1
        with:
          server: "nexus.chillo.fr"
          groupId: "cs.com"
          nexusUsername: admin
          nexusPassword: 8492dbf6-bedd-48e4-8ee6-71ada6bcf505

      - name: Build with Maven
        run: mvn -Dmaven.test.skip=true clean compile package
        #ce que j'ai ajouter
      - name: Nexus Repo Publish
        uses: sonatype-nexus-community/nexus-repo-github-action@master
        with:
          serverUrl: https://nexus.chillo.fr
          username: admin
          password: 8492dbf6-bedd-48e4-8ee6-71ada6bcf505
          format: maven2
          repository: maven-releases
          coordinates: groupId=com.cs artifactId=ms-leganda version=0.0.1-SNAPSHOT
          assets: extension=jar
          filename: ./target/ms-leganda-1.0.0.jar


      
     # - name: Extract metadata (tags, labels) for Docker
      #  id: meta
      #  uses: docker/metadata-action@v3
       # with:
        #  images: simachille/ms-leganda
      
      #- name: Build and push Docker image
      #  uses: docker/build-push-action@v3
      #  with:
         # context: .
         # push: true
          #tags: ${{ steps.meta.outputs.tags }}
          #labels: ${{ steps.meta.outputs.labels }}
  

  run-container:
    name: "Run container"
    runs-on: ubuntu-latest
    needs: [dockerize, copy-configs]
    steps:
    - name: Run container
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.RECETTE_APPLICATIONS_HOST }}
        port: ${{ secrets.RECETTE_APPLICATIONS_PORT }}
        username: ${{ secrets.RECETTE_APPLICATIONS_USERNAME }}
        password: ${{ secrets.RECETTE_APPLICATIONS_PASSWPRD }}
        key: ${{ secrets.RECETTE_APPLICATIONS_SSH_PRIVATE_KEY }}
        script: |
          docker-compose -f /opt/applications/leganda/ms-leganda/docker-compose.yml stop
          docker-compose -f /opt/applications/leganda/ms-leganda/docker-compose.yml rm -f
          docker rmi simachille/ms-leganda:develop -f
          docker-compose -f /opt/applications/leganda/ms-leganda/docker-compose.yml up -d
